AWSTemplateFormatVersion: '2010-09-09'
Description: An AWS Serverless Specification template describing your function.
Parameters:
  TransactionDataTableName:
    Description: DynamoDB Table Name for Transaction Data
    Type: String
    Default: ChainsferTransactionData
  TransactionConfirmationSQSName:
    Description: Transaction Confirmation SQS Name
    Type: String
    Default: ChainsferTransactionConfirmationSQS
  ENV:
    Description: Development ENV
    Type: String
    Default: Dev
Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 15
    Environment:
      Variables:
        SQS_NAME:
          'Fn::Join':
            - ''
            - - Ref: TransactionConfirmationSQSName
              - Ref: ENV
        TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: TransactionDataTableName
              - Ref: ENV
Resources:
  stream:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaDynamodbStream
            - Ref: ENV
      MemorySize: 128
      Handler: dist/stream.handler
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Description: ''
    Type: 'AWS::Serverless::Function'
  transferRequest:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaTransfer
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/transfer.handler
      MemorySize: 128
      Description: ''
    Type: 'AWS::Serverless::Function'
  # Permission for API gateway to call transferRequest lambda function
  TransferRequestApiGatewayInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "transferRequest.Arn"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TransferRestApi}/*/POST/"
  validateTx:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaValidateTx
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/validateTx.handler
      MemorySize: 128
      Description: ''
    Type: 'AWS::Serverless::Function'
  TransactionData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: TransactionDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: transferId
          AttributeType: S
        - AttributeName: receivingId
          AttributeType: S
      KeySchema:
        - AttributeName: transferId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: receivingId-index
          KeySchema:
            - AttributeName: receivingId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    DependsOn:
      - transferRequest
  TransactionDataStreamMapping:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn:
        'Fn::GetAtt':
          - TransactionData
          - StreamArn
      FunctionName:
        'Fn::GetAtt':
          - stream
          - Arn
      StartingPosition: LATEST
  TransactionConfirmationQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName:
        'Fn::Join':
          - ''
          - - Ref: TransactionConfirmationSQSName
            - Ref: ENV
      DelaySeconds: 0
      VisibilityTimeout: 30
    DependsOn:
      - stream
  LambdaStreamSQSEventSourceMapping:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn:
        'Fn::GetAtt':
          - TransactionConfirmationQueue
          - Arn
      FunctionName:
        'Fn::GetAtt':
          - validateTx
          - Arn
  ######################  
  # Chainsfer Rest API #
  ######################
  ChainsferRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 
        'Fn::Join':
          - '-'
          - - Ref: AWS::StackName
            - 'apigateway'
      Description: API used for transfer requests
      FailOnWarnings: true
  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'
  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn: !GetAtt 
        - ApiGatewayCloudWatchLogsRole
        - Arn
  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - ChainsferRestApiRequestPOST
    Properties:
      RestApiId: !Ref ChainsferRestApi
      StageName: Prod
  ChainsferRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref ChainsferRestApi
      ParentId: !GetAtt 
        - ChainsferRestApi
        - RootResourceId
      PathPart: transfer
  ChainsferRestApiRequestPOST:
    DependsOn: ChainsferRequestApiGatewayInvokePermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt "transferRequest.Arn"
      ResourceId: !Ref ChainsferRestApiResource
      RestApiId: !Ref ChainsferRestApi
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
  ChainsferRestApiCORSOptionMethod:
      Type: "AWS::ApiGateway::Method"
      Properties:
        ResourceId: !Ref ChainsferRestApiResource
        RestApiId: !Ref ChainsferRestApi
        AuthorizationType: NONE
        HttpMethod: OPTIONS
        Integration:
          Type: MOCK
          IntegrationResponses:
            - ResponseParameters:
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
              ResponseTemplates:
                application/json: ''
              StatusCode: '200'
          PassthroughBehavior: NEVER
          RequestTemplates:
            application/json: '{"statusCode": 200}'
        MethodResponses:
          - ResponseModels:
              application/json: Empty
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: true
              method.response.header.Access-Control-Allow-Methods: true
              method.response.header.Access-Control-Allow-Origin: true
            StatusCode: '200'
Outputs:
  RootUrl:
    Description: Root URL of the API gateway
    Value: !Join 
      - ''
      - - 'https://'
        - !Ref ChainsferRestApi
        - .execute-api.
        - !Ref 'AWS::Region'
        - .amazonaws.com/Prod
Transform: 'AWS::Serverless-2016-10-31'
