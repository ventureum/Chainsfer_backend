AWSTemplateFormatVersion: '2010-09-09'
Description: An AWS Serverless Specification template describing your function.
Parameters:
  TransactionDataTableName:
    Description: DynamoDB Table Name for Transaction Data
    Type: String
    Default: ChainsferTransactionData
  WalletAddressesDataTableName:
    Description: Table Name for Wallet Addresses Data
    Type: String
    Default: ChainsferWalletAddressesData
  ChainsferBtcXPubIndexDataTableName:
    Description: Table Name for Chainsfer Btc XPub Index
    Type: String
    Default: ChainsferBtcXPubIndexData
  ChainsferBtcTrackedAddressDataTableName:
    Description: Table Name for Chainsfer Btc Tracked Address
    Type: String
    Default: ChainsferBtcTrackedAddressData
  ChainsferBtcLastUpdatedBlockHashDataTableName:
    Description: Table Name for Chainsfer Btc Last Updated Block Hash
    Type: String
    Default: ChainsferBtcLastUpdatedBlockHashData
  BtcBlockHashDataTableName:
    Description: Table Name for BTC Block Hash Data
    Type: String
    Default: BtcBlockHashData
  UserTableName:
    Description: Table Name for user Data
    Type: String
    Default: UserTable
  TransactionConfirmationSQSName:
    Description: Transaction Confirmation SQS Name
    Type: String
    Default: ChainsferTransactionConfirmationSQS
  InitBlockHeight:
    Description: Initialized Block Height
    Type: Number
    Default: 1572570
  IntervalForUpdatingBtcXpubIndex:
    Description: Interval For Updating Btc Xpub Index In Height
    Type: Number
    Default: 5
  IntervalForUpdatingBtcBlockHashData:
    Description: Interval For Updating Btc Block Hash Data In Height
    Type: Number
    Default: 100
  ENV:
    Description: Development ENV
    Type: String
    Default: Dev
  ApiRoleVersion:
    Description: Api Role Version
    Type: String
    Default: '2012-10-17'
  LambdaCheckTxExpirationRate:
    Description: The rate that triggers checkTxExpiration Lambda function
    Default: rate(2 minutes)
    Type: String
  LambdaValidateTxRate:
    Description: The rate that triggers validateTx Lambda function
    Default: rate(2 minutes)
    Type: String
  LambdaUpdateBtcBlockHashDataRate:
    Description: The rate that triggers updateBtcBlockHashData Lambda function
    Default: rate(10 minutes)
    Type: String
  LambdaUpdateBtcXpubIndexRate:
    Description: The rate that triggers UpdateBtcXpubIndex Lambda function
    Default: rate(14 minutes)
    Type: String  
  EthPrivateKey:
    Description: The ETH private key for referal
    Default: '0x0'
    Type: String
  BtcWif:
    Description: The BTC WIF for BTC multisig
    Default: '0x0'
    Type: String
  ReferralWalletTableName:
    Description: The name of the referal wallet table
    Default: ChainsferReferralWalletData
    Type: String
Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 15
    Environment:
      Variables:
        SQS_NAME:
          'Fn::Join':
            - ''
            - - Ref: TransactionConfirmationSQSName
              - Ref: ENV
        TRANSACTION_DATA_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: TransactionDataTableName
              - Ref: ENV
        WALLET_ADDRESSES_DATA_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: WalletAddressesDataTableName
              - Ref: ENV
        USER_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: UserTableName
        CHAINSFER_BTC_XPUB_INDEX_DATA_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: ChainsferBtcXPubIndexDataTableName
              - Ref: ENV
        CHAINSFER_BTC_LAST_UPDATED_BLOCK_HASH_DATA_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: ChainsferBtcLastUpdatedBlockHashDataTableName
              - Ref: ENV
        CHAINSFER_BTC_TRACKED_ADDRESS_DATA_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: ChainsferBtcTrackedAddressDataTableName
              - Ref: ENV
        BTC_BLOCK_HASH_DATA_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: BtcBlockHashDataTableName
              - Ref: ENV
        ENV_VALUE:
          Ref: ENV
        INIT_BLOCK_HEIGHT:
          Ref: InitBlockHeight
        INTERVAL_FOR_UPDATING_BTC_XPUB_INDEX:
          Ref: IntervalForUpdatingBtcXpubIndex
        INTERVAL_FOR_UPDATING_BTC_BLOCK_HASH_DATA:
          Ref: IntervalForUpdatingBtcBlockHashData
        ETH_PRIVATE_KEY:
          Ref: EthPrivateKey
        BTC_WIF:
          Ref: BtcWif
        REFERRAL_WALLET_TABLE_NAME:
          'Fn::Join':
            - ''
            - - Ref: ReferralWalletTableName
              - Ref: ENV
Resources:
  updateBtcXpubIndex:
    Properties:
      Timeout: 900
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaUpdateBtcXpubIndex
            - Ref: ENV
      MemorySize: 128
      Handler: dist/updateBtcXpubIndex.handler
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Description: 'Update btc xpub'
    Type: 'AWS::Serverless::Function'
  LambdaUpdateBtcXpubIndexSchedule:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression:
        Ref: LambdaUpdateBtcXpubIndexRate
      State: ENABLED
      Targets:
        - Arn:
            'Fn::GetAtt':
              - updateBtcXpubIndex
              - Arn
          Id: LambdaUpdateBtcXpubIndexSchedule
  LambdaUpdateBtcXpubIndexSchedulePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - updateBtcXpubIndex
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        'Fn::GetAtt':
          - LambdaUpdateBtcXpubIndexSchedule
          - Arn
  updateBtcBlockHashData:
    Properties:
      Timeout: 900
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaUpdateBtcBlockHashData
            - Ref: ENV
      MemorySize: 128
      Handler: dist/updateBtcBlockHashData.handler
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Description: 'Update btc block data'
    Type: 'AWS::Serverless::Function'
  LambdaUpdateBtcBlockHashDataSchedule:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression:
        Ref: LambdaUpdateBtcBlockHashDataRate
      State: ENABLED
      Targets:
        - Arn:
            'Fn::GetAtt':
              - updateBtcBlockHashData
              - Arn
          Id: LambdaUpdateBtcBlockHashDataSchedule
  LambdaUpdateBtcBlockHashDataSchedulePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - updateBtcBlockHashData
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        'Fn::GetAtt':
          - LambdaUpdateBtcBlockHashDataSchedule
          - Arn
  stream:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaDynamodbStream
            - Ref: ENV
      MemorySize: 128
      Handler: dist/stream.handler
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Description: 'Tracking tx state in transfer data SQS'
    Type: 'AWS::Serverless::Function'
  transferRequest:
    Properties:
      Timeout: 600
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaTransfer
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/transfer.handler
      MemorySize: 128
      Description: 'Handle user transfer requests'
    Type: 'AWS::Serverless::Function'
  TransferRequestApiGatewayInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - transferRequest
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Sub': >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChainsferRestApi}/*/POST/transfer
    DependsOn:
      - ChainsferRestApi
  userDataRequest:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaUserData
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/user.handler
      MemorySize: 128
      Description: 'Handle user data requests'
    Type: 'AWS::Serverless::Function'
  UserDataRequestApiGatewayInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - userDataRequest
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Sub': >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChainsferRestApi}/*/POST/user
    DependsOn:
      - ChainsferRestApi
  referralWalletRequest:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaReferralWallet
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/referralWallet.handler
      MemorySize: 128
      Description: 'Handle referral wallet transfer requests'
    Type: 'AWS::Serverless::Function'
  ReferralWalletRequestApiGatewayInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - referralWalletRequest
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Sub': >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChainsferRestApi}/*/POST/referralWallet
    DependsOn:
      - ChainsferRestApi
  resourceOptionsMethod:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - resourceOptionsMethod
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/resourceOptionsMethod.handler
      MemorySize: 128
      Description: 'Global options config for lambda functions'
    Type: 'AWS::Serverless::Function'
  resourceOptionsMethodApiGatewayInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - resourceOptionsMethod
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Sub': >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChainsferRestApi}/*/OPTIONS/transfer
    DependsOn:
      - ChainsferRestApi
  resourceOptionsMethodUserApiGatewayInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - resourceOptionsMethod
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Sub': >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChainsferRestApi}/*/OPTIONS/user
    DependsOn:
      - ChainsferRestApi
  resourceOptionsMethodReferralWalletApiGatewayInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - resourceOptionsMethod
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Sub': >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ChainsferRestApi}/*/OPTIONS/referralWallet
    DependsOn:
      - ChainsferRestApi
  validateTx:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaValidateTx
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/validateTx.handler
      MemorySize: 128
      Timeout: 900
      Description: 'Validate tx state and update transfer data'
    Type: 'AWS::Serverless::Function'
  LambdaValidateTxSchedule:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression:
        Ref: LambdaValidateTxRate
      State: ENABLED
      Targets:
        - Arn:
            'Fn::GetAtt':
              - validateTx
              - Arn
          Id: LambdaValidateTxSchedule
  LambdaValidateTxSchedulePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - validateTx
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        'Fn::GetAtt':
          - LambdaValidateTxSchedule
          - Arn
  checkTxExpiration:
    Properties:
      FunctionName:
        'Fn::Join':
          - ''
          - - LambdaCheckTxExpiration
            - Ref: ENV
      Role: >-
        arn:aws:iam::727151012682:role/cloud9-chainsfer-transferRequestRole-YJZX77XEMNPC
      Handler: dist/checkTxExpiration.handler
      MemorySize: 128
      Timeout: 900
      Description: 'Check if a transfer request is expired'
    Type: 'AWS::Serverless::Function'
  LambdaCheckTxExpirationSchedule:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression:
        Ref: LambdaCheckTxExpirationRate
      State: ENABLED
      Targets:
        - Arn:
            'Fn::GetAtt':
              - checkTxExpiration
              - Arn
          Id: LambdaCheckTxExpirationSchedule
  LambdaCheckTxExpirationSchedulePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - checkTxExpiration
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        'Fn::GetAtt':
          - LambdaCheckTxExpirationSchedule
          - Arn
  TransactionData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: TransactionDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: transferId
          AttributeType: S
        - AttributeName: receivingId
          AttributeType: S
      KeySchema:
        - AttributeName: transferId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: receivingId-index
          KeySchema:
            - AttributeName: receivingId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
    DependsOn:
      - transferRequest
  WalletAddressesData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: WalletAddressesDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: googleId
          AttributeType: S
      KeySchema:
        - AttributeName: googleId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  UserTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: UserTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: googleId
          AttributeType: S
      KeySchema:
        - AttributeName: googleId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  ReferralWalletTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: ReferralWalletTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: googleId
          AttributeType: S
      KeySchema:
        - AttributeName: googleId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  TransactionDataStreamMapping:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn:
        'Fn::GetAtt':
          - TransactionData
          - StreamArn
      FunctionName:
        'Fn::GetAtt':
          - stream
          - Arn
      StartingPosition: LATEST
  TransactionConfirmationQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName:
        'Fn::Join':
          - ''
          - - Ref: TransactionConfirmationSQSName
            - Ref: ENV
      DelaySeconds: 0
      VisibilityTimeout: 30
    DependsOn:
      - stream
  ChainsferBtcXPubIndexData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: ChainsferBtcXPubIndexDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: xpub
          AttributeType: S
      KeySchema:
        - AttributeName: xpub
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  ChainsferBtcTrackedAddressData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: ChainsferBtcTrackedAddressDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: address
          AttributeType: S
      KeySchema:
        - AttributeName: address
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  ChainsferBtcLastUpdatedBlockHashData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: ChainsferBtcLastUpdatedBlockHashDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: network
          AttributeType: S
      KeySchema:
        - AttributeName: network
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  BtcBlockHashData:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName:
        'Fn::Join':
          - ''
          - - Ref: BtcBlockHashDataTableName
            - Ref: ENV
      AttributeDefinitions:
        - AttributeName: height
          AttributeType: 'N'
      KeySchema:
        - AttributeName: height
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  ChainsferRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name:
        'Fn::Join':
          - '-'
          - - Ref: 'AWS::StackName'
            - apigateway
      Description: API used for transfer requests
      FailOnWarnings: true
  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version:
          Ref: ApiRoleVersion
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version:
              Ref: ApiRoleVersion
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'
  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn:
        'Fn::GetAtt':
          - ApiGatewayCloudWatchLogsRole
          - Arn
  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - ChainsferRestApiRequestPOST
      - ChainsferUserRestApiRequestPOST
    Properties:
      RestApiId:
        Ref: ChainsferRestApi
      StageName: Prod
  ChainsferRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: ChainsferRestApi
      ParentId:
        'Fn::GetAtt':
          - ChainsferRestApi
          - RootResourceId
      PathPart: transfer
  ChainsferRestApiRequestPOST:
    DependsOn: TransferRequestApiGatewayInvokePermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub':
            - >-
              arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn:
                'Fn::GetAtt':
                  - transferRequest
                  - Arn
      ResourceId:
        Ref: ChainsferRestApiResource
      RestApiId:
        Ref: ChainsferRestApi
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
  ChainsferRestApiCORSOptionMethod:
    DependsOn: resourceOptionsMethodApiGatewayInvokePermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ResourceId:
        Ref: ChainsferRestApiResource
      RestApiId:
        Ref: ChainsferRestApi
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub':
            - >-
              arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn:
                'Fn::GetAtt':
                  - resourceOptionsMethod
                  - Arn
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
  ChainsferUserRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: ChainsferRestApi
      ParentId:
        'Fn::GetAtt':
          - ChainsferRestApi
          - RootResourceId
      PathPart: user
  ChainsferUserRestApiRequestPOST:
    DependsOn: UserDataRequestApiGatewayInvokePermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub':
            - >-
              arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn:
                'Fn::GetAtt':
                  - userDataRequest
                  - Arn
      ResourceId:
        Ref: ChainsferUserRestApiResource
      RestApiId:
        Ref: ChainsferRestApi
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
  ChainsferUserRestApiCORSOptionMethod:
    Type: 'AWS::ApiGateway::Method'
    DependsOn: resourceOptionsMethodUserApiGatewayInvokePermission
    Properties:
      ResourceId:
        Ref: ChainsferUserRestApiResource
      RestApiId:
        Ref: ChainsferRestApi
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub':
            - >-
              arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn:
                'Fn::GetAtt':
                  - resourceOptionsMethod
                  - Arn
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
  ChainsferReferralWalletRestApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: ChainsferRestApi
      ParentId:
        'Fn::GetAtt':
          - ChainsferRestApi
          - RootResourceId
      PathPart: referralWallet
  ChainsferReferralWalletRestApiRequestPOST:
    DependsOn: ReferralWalletRequestApiGatewayInvokePermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub':
            - >-
              arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn:
                'Fn::GetAtt':
                  - referralWalletRequest
                  - Arn
      ResourceId:
        Ref: ChainsferReferralWalletRestApiResource
      RestApiId:
        Ref: ChainsferRestApi
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
  ChainsferReferralWalletRestApiCORSOptionMethod:
    Type: 'AWS::ApiGateway::Method'
    DependsOn: resourceOptionsMethodReferralWalletApiGatewayInvokePermission
    Properties:
      ResourceId:
        Ref: ChainsferReferralWalletRestApiResource
      RestApiId:
        Ref: ChainsferRestApi
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub':
            - >-
              arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn:
                'Fn::GetAtt':
                  - resourceOptionsMethod
                  - Arn
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: '200'
Outputs:
  RootUrl:
    Description: Root URL of the API gateway
    Value:
      'Fn::Join':
        - ''
        - - 'https://'
          - Ref: ChainsferRestApi
          - .execute-api.
          - Ref: 'AWS::Region'
          - .amazonaws.com/Prod
Transform: 'AWS::Serverless-2016-10-31'
